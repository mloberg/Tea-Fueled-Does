<?php

// define some app directories
$public_dir = __DIR__.'/public';
$app_dir = 'tfd';
$content_dir = 'content';

// set the environment (by getting it from the .htaccess file)
$htaccess = file_get_contents($public_dir.'/.htaccess');
preg_match('/SetEnv ENV (.*)/', $htaccess, $match);
$environment = $match[1];

// include the files to get this going
require_once 'bootstrap.php';

// set some tea config options
use TFD\Config;
Config::set('migrations.dir', CONTENT_DIR.'db/migrations/');
include_once(CONTENT_DIR.'tea-config'.EXT);

// run verbosely
error_reporting(E_ERROR|E_WARNING|E_PARSE);

// deal with exceptions differently
set_exception_handler(function($e){
	echo $e->getMessage() . PHP_EOL;
	exit(1);
});
set_error_handler(function($number, $error, $file, $line){
	echo $error;
	exit(1);
}, E_ALL ^ E_NOTICE);

// if looking for version, display version and exit
if(preg_match('/-v|--version/', trim($_SERVER['argv'][1]))){
	echo 'v'.TFD\Config::get('application.version').PHP_EOL;
	exit(0);
}

// define STDIN if not already
if(!defined('STDIN')) define('STDIN', fopen("php://stdin", 'r'));

// parse the command
preg_match('/tea ([\w|\-|:]+) ?([\w|\-|:]+)? ?(.+)?/', implode(' ', $_SERVER['argv']), $parts);
$class = $parts[1];
$command = $parts[2];
$args = explode(' ', $parts[3]);
unset($parts);

// welcome message
echo "== Tea-Fueled Does v".TFD\Config::get('application.version')." ==\n";

// help?
if(empty($class) || preg_match('/(--)?help|-h/', $class)){
	echo <<<MAN
A CLI to interface with Tea-Fueled Does.

	Usage: tea <command> <args>

Tea Commands:

	init:        Quickly setup TFD.
	user:        Manage users.
	config:      Change a config option.
	database:    Make changes to the database.
	migrations:  Manage database migrations.


Args:

Each command has it's own set of commands,
to see args for a specific comamnd run:

	tea <command> -h

TFD Homepage: http://teafueleddoes.com/
Tea Homepage: http://teafueleddoes.com/v2/tea

MAN;
	exit(0);
}

// see if class exists
try{
	class_exists('TFD\Tea\\'.$class);
}catch(Exception $e){
	throw new \Exception("command does not exist");
}

// if command is empty, show command help
if(empty($command)){
	call_user_func('TFD\Tea\\'.$class.'::help');
}elseif($class == 'update'){
	\TFD\Tea\Update::do_update($args[0]);
}else{
	$command = preg_replace('/^--?/', '', $command);
	if(method_exists('TFD\Tea\\'.$class, '__flags')){
		$a = call_user_func('TFD\Tea\\'.$class.'::__flags');
		if(array_key_exists($command, $a)) $command = $a[$command];
	}
	if(!method_exists('TFD\Tea\\'.$class, $command) || (($method = new \ReflectionMethod('TFD\Tea\\'.$class, $command)) && !$method->isPublic())){
		throw new \Exception("'tea {$class} {$command}' is not a valid command");
	}
	call_user_func('TFD\Tea\\'.$class.'::'.$command, $args);
}

// exit the script properly
exit(0);